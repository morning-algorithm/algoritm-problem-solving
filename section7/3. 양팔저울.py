import sys
#sys.stdin = open("input.txt","rt")

#answer
'''
추가 양팔저울의 왼쪽(물그릇이 오른쪽), 오른쪽 (물그릇이 왼쪽), 올려놓지 않음. 세가지 상태(가지) 있다.
                                                 0
   [왼=> +첫번째 추무게]  [오=> -첫번째 추무게]   [=> 0]

만약 {1,5,7}
                                              0
                  1                        -1                    0
 6(1+5) -4(1-5)  1(1+0)

 이런식으로 진행!

양팔저울이있을 때 
-4(1-5)는 (왼쪽 가지먼저-> 오른쪽 가지)
[1(추) + -4(물그릇) ]---------[ 5(추) ]
이런 상태를 나타냄!

그런데, 상태트리를 진행해 나가다보면 (오른쪽 가지먼저-> 왼쪽가지)
4(5-1)
[ 5(추) ]---------[1(추) + 4(물그릇) ]
이런 대칭적인 상태가 반드시 생김!

=> 따라서 음수가 나오는 경우는 고려하지 않아도 됨!! 무조건 양수로 나오므로.
'''
def dfs(L,sum):
      global res
       
      if L == n: #레벨이 원소갯수와 같아지면 다 뽑은 것이다. 각 원소들이 왼쪽에 놓일것인지, 오른쪽에 놓일것인지, 아니면 아예 놓지 않을것인지 모든 경우의수가 계산됨.
            if sum>0 and sum <=S: # sum must 1~S사이의 수.  음수는 안봐도 되는 이유는 무조건 대칭이 있기때문.
                  res.add(sum)
            return
      
      dfs(L+1,sum+a[L])
      dfs(L+1,sum-a[L])
      dfs(L+1,sum)
      
n = int(input())
a = list(map(int,input().split()))
S = sum(a)
res = set()
dfs(0,0)
print(S-len(res))


