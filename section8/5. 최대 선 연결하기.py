#me

'''
안겹치려면, 내앞에 작은수만 있으면 돼.
이거 그냥 해당원소를 마지막으로 했을때 최대 몇개를 이을수있는지?

4를 마지막으로 했을떄? ->1개 가능
1을 마지막으로 했을떄? -> 4는 나보다 큰수니까 꼬인다. 그래서 자기자신만해서 1개만 가능하다.
2를 마지막으로했을때? -> 1을 마지막으로 했을 때-> 1개+자기자신 = 2개. 4는 나보다 큰수니까 꼬인다
...
이런식으로 해서
내앞에 있는 애가 나보다 작으면 가능한데
이제 제일 연결한 갯수가 큰거 +1을 하면 된다.
=> 원래는 그냥 내앞에있는 숫자중에 제일 가깝고 나보다 작은수를 하면되는거아닌가했는데? 생각해보니 2,3,1,4의 경우에는 2,3,4이렇게 선택하는게 더 이득이다.
=> 따라서 최대로 연결한 갯수를 구해야한다.


'''

import sys
#sys.stdin = open("input.txt","r")

n = int(input())
arr = list(map(int,input().split()))
arr.insert(0,0)
dy = [0] * (n+1)
result = 0
dy[1]= 1 #arr배열 1번쨰 원소가 마지막이라고 했을떄의 답 

for i in range(2,n+1):
    max = 0 #여기 max값은 for문 전이어야한다.
    for j in range(i-1,0,-1):
        if arr[j] < arr[i] and max < dy[j]:
            max = dy[j]
    dy[i] = max + 1 #범위가 틀렸었음 
    if result < dy[i]:
        result = dy[i]
print(result)

#answer
'''
큰수다음에 작은수가나오면 선이 꼬여버린다!
최대 부분 증가수열 문제와 정확하게 일치한다!!
최대부분증가수열 문제는 다양하게 나올수있다.
예를들어서
    다연결해놓고 몇개의 선을 제거하면 최대로 선을 연결할 수 있느냐?? 할수도있다.
        이러면 부분증가수열의 최대길이를 구해놓고 10-최대길이 => 제거할 선의 개수가된다.
    다리를 만드는데 양쪽 다리번호를 제공해놓고 다리는 교차할 수 없고 최대 몇개의 다리를 만들수 있느냐. 이런식으로 나오기도함.
'''
